.message_block
%h1=t('.heading')

%h4= t('.filetypes')
.admin.well
  %table.table.borderless.filetypes{:style => "width:200px;"}
    %tbody

  = form_for @filetype, :url => corporate_services_internal_documents_filetypes_path, :remote => true do |f|
    %table.table.borderless{:style => "width:200px;"}
      %tr
        %td
          %button.btn.btn-success.btn-xs{:style => 'line-height:1.8;', :type => 'submit'}= t('.add')
        %td= f.text_field :ext, :size => 8, :placeholder => 'e.g. ppt'

%h4= t('.filesize_max')
.admin.well
  =form_tag corporate_services_internal_documents_filesize_path, :method => :put, :remote => true, :id => :update_filesize do
    %table.table.borderless.filesize{:style => "width:200px;"}
      %tbody
        %tr
          %td= t('.current_val')
          %td
            %span#filesize #{@filesize}
            %span MB
        %tr
          %td
            %button.btn.btn-success.btn-xs#change_filesize{:style => 'line-height:1.8;', :type => 'submit'}= t('.change')
          %td
            = text_field_tag :filesize, nil, :size => 6, :placeholder => "e.g. #{@filesize.to_i+2}"
            %span MB

:coffeescript
  $ ->
    $('#update_filesize').bind "ajax:success", (e,data,status,xhr)->
      if !_.isEmpty(data.trim())
        $('span#filesize').text(data)
      $('input#filesize').val("")

    $('#update_filesize').bind "ajax:error", (e,data,status,xhr)->
      $('.message_block').html flash_error_template({message : data.responseText})

    _.templateSettings = {
      interpolate: /\{\{(.+?)\}\}/g
    }

    filetype_template = _.template($("#filetype_template").html())
    flash_error_template = _.template($("#flash_error_template").html())

    filetypes = #{@internal_document_filetypes.to_json}
    if filetypes.length == 0
      $('.filetypes tbody').append "<tr><td id='empty'>#{ t('.empty')}</td></tr>"
    else
      _.each filetypes, (filetype)->
        $('.filetypes tbody').append filetype_template({type : filetype})

    $('#new_filetype').bind "ajax:success", (e,data,status,xhr)->
      $('.filetypes tbody').append filetype_template({type : data})
      $('#filetype_ext').val('')
      $('td#empty').closest('tr').remove()
      $('.message_block').html ''

    $('#new_filetype').bind "ajax:error", (e,data,status,xhr)->
      $('.message_block').html flash_error_template({message : data.responseText})

    $('table.filetypes').on 'click', 'a.delete_filetype', (e)->
      e.preventDefault()
      context = $(@).closest('tr')
      id = context.find('.type').html()
      url = "#{corporate_services_internal_documents_filetype_path('id')}".replace("id",id)
      $.ajax
        url: url
        method: 'delete'
        dataType: 'json'
        context: context # becomes 'this' in the callback
        success: (data, status, xhr)->
          this.remove()
          if $('.type').length == 0
            $('.filetypes tbody').append "<tr><td id='empty'>#{ t('.empty')}</td></tr>"
          $('.message_block').html('')
        error: (data,status,xhr) ->
          $('.message_block').html flash_error_template({message : data.responseText})

%script{:type => 'template/html', :id => :filetype_template}
  %tr
    %td.type {{ type }}
    %td= link_to t('defaults.delete'), nil, :class => 'delete_filetype'

%script{:type => 'template/html', :id => :flash_error_template}
  %ul.error
    %li {{ message }}
