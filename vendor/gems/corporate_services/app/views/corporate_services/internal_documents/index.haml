.message_block
%h1= t('.heading')
.container
  / The file upload form used as target for the jQuery fileupload widget
  / this is the fileupload configuration when uploading files via the buttonbar
  .fileupload.buttonbar{:'data-file-input' => '#primary_fileinput' }
    / The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload
    .row.fileupload-buttonbar
      .col-lg-9
        / The fileinput-button span is used to style the file input field as button
        %span.btn.btn-success.fileinput-button
          %i.fa.fa-plus.fa-lg{:style => "color:white"}
          %span= t('.add')
          %input#primary_fileinput{:multiple => "multiple", :name => "primary_file", :type => "file"}
        %button.btn.btn-primary.start{:type => "submit"}
          %i.fa.fa-cloud-upload.fa-lg{:style => "color:white"}
          %span= t('.start')
        %button.btn.btn-warning.cancel{:type => "reset"}
          %i.fa.fa-ban.fa-lg{:style => "color:white"}
          %span= t('.cancel')
        / The global file processing state
        %span.fileupload-process
    .row.fileupload_progress
      / The global progress state
      .col-lg-9.fileupload-progress.fade
        / The global progress bar
        .progress.progress-striped.active{"aria-valuemax" => "100", "aria-valuemin" => "0", :role => "progressbar"}
          .progress-bar.progress-bar-success{:style => "width:0%;"}
        / The extended global progress state
        .progress-extended Â 
    .row
      .col-lg-9#uploads
    .row
      .col-lg-9.the_files
    .row
      .col-lg-9
        / The table listing the files available for upload/download
        .headings
          %table
            %tr
              %td{:style => "width:36%; text-align:left"}= t('.doc_title')
              %td{:style => "text-align:left"}= t('.revision')
              %td= t('.information')
              %td{:style => "width:16%"}=t('.edit')
              %td= t('.download')
              %td= t('.archive')
              %td= t('.add1')
              %td= t('.delete')
        #accordion.panel-group.files{:role => "tablist", :name => 'internal_document[file]'}


= render :partial => 'template_upload', :locals => {:id => 'primary_upload', :prefix => 'internal_document', :label_prefix => 'internal_document'}
= render :partial => 'template_upload', :locals => {:id => 'archive_upload', :prefix => 'internal_document[archive_files][]', :label_prefix => 'internal_document_archive_files_'}
= render :partial => 'internal_documents_templates'

= javascript_include_tag 'corporate_services/in_page_edit'
= javascript_include_tag 'corporate_services/flash'

:coffeescript
  $ ->
    $('.fileupload-buttonbar .start').on 'click', ->
      flash.notify()

    $('.fileupload-buttonbar .fileinput-button, .fileupload-buttonbar .cancel, .fileupload-buttonbar .delete').on 'click', (event)->
      event.stopPropagation()
      flash.hide()

    $('.fileupload-buttonbar .fileinput-button').on 'click', '.fa-plus', (e)->
      $(@).parent().find('input:file').click()
    $('.fileupload-buttonbar .fileinput-button').on 'click', 'span', (e)->
      $(@).parent().find('input:file').click()


:javascript
  var maximum_filesize = #{InternalDocument.maximum_filesize}
  var permitted_filetypes = #{ InternalDocument.permitted_filetypes }
  var files = #{ @internal_documents.to_json }
  var files_list_error = "#{t('.flash.no_files_error')}"
  var required_files = []

= javascript_include_tag "corporate_services/internal_documents"
