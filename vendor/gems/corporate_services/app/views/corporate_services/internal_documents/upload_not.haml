/ The file upload form used as target for the file upload widget
%form#fileupload{:action => "internal_documents", :enctype => "multipart/form-data", :method => "POST"}
  / The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload
  .row.fileupload-buttonbar
    .col-lg-7
      / The fileinput-button span is used to style the file input field as button
      %span.btn.btn-success.fileinput-button
        %i.glyphicon.glyphicon-plus
        %span Add files...
        %input{:multiple => "multiple", :name => "files[]", :type => "file"}/
      %button.btn.btn-primary.start{:type => "submit"}
        %i.glyphicon.glyphicon-upload
        %span Start upload
      %button.btn.btn-warning.cancel{:type => "reset"}
        %i.glyphicon.glyphicon-ban-circle
        %span Cancel upload
      %button.btn.btn-danger.delete{:type => "button"}
        %i.glyphicon.glyphicon-trash
        %span Delete
      %input.toggle{:type => "checkbox"}/
      / The global file processing state
      %span.fileupload-process
    / The global progress state
    .col-lg-5.fileupload-progress.fade
      / The global progress bar
      .progress.progress-striped.active{"aria-valuemax" => "100", "aria-valuemin" => "0", :role => "progressbar"}
        .progress-bar.progress-bar-success{:style => "width:0%;"}
      / The extended global progress state
      .progress-extended Â 
  / The table listing the files available for upload/download
  %table.table.table-striped{:role => "presentation"}
    %tbody.files
%br/

/ The template to display files available for upload
%script#template-upload{:type => "text/x-tmpl"}
  :cdata
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-upload fade">
    <td>
    <span class="preview"></span>
    </td>
    <td>
    <p class="name">{%=file.name%}</p>
    <strong class="error text-danger"></strong>
    </td>
    <td>
    <p class="size">Processing...</p>
    <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
    </td>
    <td>
    {% if (!i && !o.options.autoUpload) { %}
    <button class="btn btn-primary start" disabled>
    <i class="glyphicon glyphicon-upload"></i>
    <span>Start</span>
    </button>
    {% } %}
    {% if (!i) { %}
    <button class="btn btn-warning cancel">
    <i class="glyphicon glyphicon-ban-circle"></i>
    <span>Cancel</span>
    </button>
    {% } %}
    </td>
    </tr>
    {% } %}
/ The template to display files available for download
%script#template-download{:type => "text/x-tmpl"}
  :cdata
    {% for (var i=0, file; file=o.files[i]; i++) { %}
    <tr class="template-download fade">
    <td>
    <span class="preview">
    {% if (file.thumbnailUrl) { %}
    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnailUrl%}"></a>
    {% } %}
    </span>
    </td>
    <td>
    <p class="name">
    {% if (file.url) { %}
    <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
    {% } else { %}
    <span>{%=file.name%}</span>
    {% } %}
    </p>
    {% if (file.error) { %}
    <div><span class="label label-danger">Error</span> {%=file.error%}</div>
    {% } %}
    </td>
    <td>
    <span class="size">{%=o.formatFileSize(file.size)%}</span>
    </td>
    <td>
    {% if (file.deleteUrl) { %}
    <button class="btn btn-danger delete" data-type="{%=file.deleteType%}" data-url="{%=file.deleteUrl%}"{% if (file.deleteWithCredentials) { %} data-xhr-fields='{"withCredentials":true}'{% } %}>
    <i class="glyphicon glyphicon-trash"></i>
    <span>Delete</span>
    </button>
    <input type="checkbox" name="delete" value="1" class="toggle">
    {% } else { %}
    <button class="btn btn-warning cancel">
    <i class="glyphicon glyphicon-ban-circle"></i>
    <span>Cancel</span>
    </button>
    {% } %}
    </td>
    </tr>
    {% } %}
  /%script{:src => "//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"}
  / The jQuery UI widget factory, can be omitted if jQuery UI is already included
  /%script{:src => "js/vendor/jquery.ui.widget.js"}
  / The Templates plugin is included to render the upload/download listings
  -#%script{:src => "//blueimp.github.io/JavaScript-Templates/js/tmpl.min.js"}
  / The Load Image plugin is included for the preview images and image resizing functionality
  /%script{:src => "//blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"}
  / The Canvas to Blob plugin is included for image resizing functionality
  /%script{:src => "//blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"}
  / Bootstrap JS is not required, but included for the responsive demo navigation
  /%script{:src => "//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"}
  / The Iframe Transport is required for browsers without support for XHR file uploads
  /%script{:src => "js/jquery.iframe-transport.js"}
  / The basic File Upload plugin
  /%script{:src => "js/jquery.fileupload.js"}
  / The File Upload processing plugin
  /%script{:src => "js/jquery.fileupload-process.js"}
  / The File Upload image preview & resize plugin
  /%script{:src => "js/jquery.fileupload-image.js"}
  / The File Upload audio preview plugin
  /%script{:src => "js/jquery.fileupload-audio.js"}
  / The File Upload video preview plugin
  /%script{:src => "js/jquery.fileupload-video.js"}
  / The File Upload validation plugin
  /%script{:src => "js/jquery.fileupload-validate.js"}
  / The File Upload user interface plugin
  /%script{:src => "js/jquery.fileupload-ui.js"}
  / The main application script
  /%script{:src => "js/main.js"}
