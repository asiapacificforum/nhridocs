%script#show_strategic_priority{:type => 'text/ractive'}
  .panel.panel-default.strategic_priority.editable_container{"data-update_url" => "{{ update_url }}", :id => "strategic_priority_editable{{id}}"}
    .panel-heading.strategic_priority_title
      %h4.panel-title.clearfix
        %table{:style=> "width:100%"}
          %tr
            %td{:style => "width:16%"}
              %div{'data-toggle' => 'edit', 'data-editable_attribute' => 'priority_level'}
                .fade.edit
                  %select.form-control#strategic_priority_priority_level{:style => "height: initial; width: initial; margin-left: -10px; margin-top: -3px;", :name => 'strategic_priority[priority_level]', :value => "{{priority_level}}"}
                    - priority_level_options.each do |opt|
                      %option{:value => opt[1]}= opt[0]
                .fade.no_edit
                  %span= t('.strategic_priority')
            %td{:style => "width:60%"}
              %div{'data-toggle' => 'edit', 'data-editable_attribute' => 'description'}
                .fade.edit
                  %input.form-control#strategic_priority_description{:'data-name' => :description, :name => "strategic_priority[description]", :'value' => "{{ description }}", :style => 'width:40px; height: 25px; margin-top: -3px; font-size: 16px; padding:0px;'}
                .fade.no_edit
                  %span {{ description }}
            %td{:style => "text-align:center; width:6%; font-size:14px;", "data-parent" => "#strategic_plan", "data-toggle" => "collapse", :href => "#collapse{{id}}"}
              %i.fa.fa-folder-o.fa-lg#toggle
            %td{:style => "text-align:center; width:6%; font-size:14px;"}
              .icon{'data-toggle' => 'edit', :style => 'height:20px'}
                .fade.edit
                  %i.fa.fa-remove.fa-lg{:style => "position:relative; left:30px;", :id => "strategic_priority_editable{{id}}_edit_cancel"}
            %td{:style => "text-align:center; width:6%; font-size:14px;"}
              %div.icon{'data-toggle' => 'edit'}
                .fade.edit
                  %i.fa.fa-check.fa-lg{:id => "strategic_priority_editable{{id}}_edit_save", :style => "position:relative; left:21px;"}
                .fade.no_edit
                  %i.fa.fa-pencil-square-o.fa-lg{:id => "strategic_priority_editable{{id}}_edit_start"}
            %td{:style => "text-align:center; width:6%; font-size:14px;"}
              %i.fa.fa-trash-o.fa-lg#delete{'on-click' => 'delete()'}
    .panel-collapse.collapse.strategic_priority_content{:id => "collapse{{id}}"}
      .panel-body
        %table.table#planned_results
          %tr.heading
            %td{:style => "width:16.6666667%"}= t('.planned_results')
            %td{:style => "width:16.6666667%"}= t('.outcomes')
            %td{:style => "width:16.6666667%"}= t('.activities')
            %td{:style => "width:16.6666667%"}= t('.perf_indicators')
            %td{:style => "width:16.6666667%"}= t('.reminders')
            %td{:style => "width:16.6666667%"}= t('.progress')
          {{#planned_results}}
          <pr description="{{description}}" indexed_description="{{indexed_description}}" id="{{id}}"/>
          {{/planned_results}}
          %tr
            %td
              %i.fa.fa-plus.fa-lg.new_planned_result{'on-click' => 'new_planned_result()', :style => 'position:relative; z-index:9'}
              -# must be positioned over the textarea of the planned_result
            %td
            %td
            %td
            %td
            %td

%script#new_strategic_priority_template{:type => 'text/ractive'}
  .panel.panel-default.new_strategic_priority
    = form_for :strategic_priority, :url => corporate_services_strategic_plan_strategic_priorities_path("spid").gsub(/spid/,"{{spid}}"), :remote => true, :html => {:id => :new_strategic_priority, :style => "padding:6px 0px"} do |f|
      .form-inline
        .form-group
          =f.label :priority_level, t('.priority'), :class => 'control-label sr-only'
          #priority_level_error.error{:style => 'padding-left:6px;', 'data-message' => t('.priority_level_error_message')} {{ priority_level_error }} &nbsp;
          =f.select :priority_level, priority_level_options, {:include_blank => 'Select priority level'}, {'on-change' => 'remove_priority_level_errors()', :class => 'form-control sp-select', :value => "{{priority_level}}"}
        .form-group.clearfix
          =f.label :description, t('.description'), :class => 'control-label sr-only'
          #description_error.error{:style => "float:left;", 'data-message' => t('.description_error_message')} {{ description_error }} &nbsp;
          .chars_remaining{:style => "float:right"}= t('.chars_remaining')
          =f.text_field :description, :class => 'form-control', :placeholder => "Enter description", :size => 100, :maxlength => 100, :value => "{{description}}", 'on-keydown' => "remove_description_errors()"
        .form-group
          .nothing{:style => 'visibility:hidden'} nothing
          %i.fa.fa-remove.fa-lg#edit_cancel{:style => 'padding-left:30px', 'on-click'=>'cancel()'}
          %i.fa.fa-check.fa-lg#edit-save{:style => 'padding-left:30px', 'on-click'=>'save()'}

%script#show_or_new_strategic_priority{:type => 'text/ractive'}
  {{#if !persisted }}
  {{> new_strategic_priority_template }}
  {{else}}
  {{> show_strategic_priority }}
  {{/if}}

%script#strategic_plan_template{:type => 'text/ractive'}
  {{#strategic_priorities }}
  <sp id="{{id}}" description="{{description}}" priority_level="{{priority_level}}" update_url="{{update_url}}" planned_results="{{planned_results}}"/>
  {{/strategic_priorities}}

%script#show_or_new_planned_result_template{:type => 'text/ractive'}
  {{#if !persisted }}
  {{> new_planned_result_template }}
  {{else}}
  {{> show_planned_result_template }}
  {{/if}}

%script#show_planned_result_template{:type => 'text/ractive'}
  %tr.planned_result.editable_container{:id => "planned_result_editable{{id}}"}
    %td.description{ 'data-toggle' => 'edit', 'data-id' => '{{id}}'}
      .fade.no_edit{ 'onMouseOver' => "$(this).find('.delete_icon').show()", 'onMouseOut' => "$(this).find('.delete_icon').hide()"}
        %span{:id => "planned_result_editable{{id}}_edit_start", :style => 'cursor:pointer'}
          {{ indexed_description }}
        %span.delete_icon{:style => 'float:right; display:none', 'on-click'=>'delete_this()'}
          %i.fa.fa-lg.fa-trash-o
      .fade.edit
        // using the rails form helper foils the ractivjs 2-way binding!
        %textarea{:id => 'planned_result_description', :value => '{{description}}', :name => 'planned_result[description]'}
        //=text_area :planned_result, :description, :value => '{{description}}'
        .icon{'data-toggle' => 'edit', :style => 'height:20px'}
          %i.fa.fa-remove.fa-lg{:id => "planned_result_editable{{id}}_edit_cancel", :style => "margin-left:40px"}
          %i.fa.fa-check.fa-lg{:id => "planned_result_editable{{id}}_edit_save", :style => "margin-left:56px"}
    %td
    %td
    %td
    %td
    %td

%script#new_planned_result_template{:type => 'text/ractive'}
  %tr.new_planned_result{'data-create_url' => corporate_services_strategic_priority_planned_results_path('spid').gsub(/spid/,"{{spid}}")}
    %td
      #description_error.error{'data-message' => t('.description_error_message')} {{ description_error }}
      %div=text_area :planned_result, :description, 'on-keydown' => "remove_description_errors()",
            :cols => 24, :rows => 4,
            :id=>'planned_result_description', :placeholder => "Enter description",
            'data-name' => :description, :name => "planned_result[description]",
            :'value' => "{{ description }}", :style => 'margin-top: -3px; font-size: 14px; padding:0px; position:relative; z-index:10;'
    %td
    %td
    %td
    %td
    %td
  %tr
    %td
      %i.fa.fa-remove.fa-lg#create_stop{'on-click'=>'create_stop()', :style => "margin-left:40px"}
      %i.fa.fa-check.fa-lg#create_save{'on-click'=>'create_save()', :style => "margin-left:56px"}
    %td
    %td
    %td
    %td
    %td

:coffeescript
  $ ->
    Ractive.DEBUG = false

    strategic_plan_data = #{@strategic_plan.to_json}

    InpageEdit = this.InpageEdit

    PlannedResult = Ractive.extend
      template : '#show_or_new_planned_result_template'
      computed :
        persisted : ->
          !isNaN(parseInt(@.get('id')))
      oninit : ->
        if !@.get('persisted')
          @.parent.hide_add_planned_result()
      onrender : ->
        if @.get('persisted')
          @inpage_edit = new InpageEdit
            object : @
            on : '#planned_result_editable'+@.get('id')
            focus_element : 'input.planned_result_description'
            success : (response, statusText, jqxhr)->
                @.options.object.set(response)
                @.show()
            error : ->
              console.log "Changes were not saved, for some reason"
      create_save : ->
        context = $(@.viewmodel.ractive.el)
        url = context.find('.new_planned_result').data('create_url')
        data = context.find(':input').serializeArray()
        strategic_priority_id = @.parent.get('id')
        data[data.length] = {name : 'planned_result[strategic_priority_id]', value : strategic_priority_id}
        if @.validate(data)
          $.ajax
            type : 'post'
            url : url
            data : data
            dataType : 'json'
            success : @create_pr
            context : @
      create_stop : ->
        @.parent.remove_planned_result_form()
      validate : (data) ->
        message = $('#description_error').data('message')
        reg = new RegExp('description')
        field_obj = _(data).find (d)->
                      reg.test(d.name)
        if field_obj.value == ""
          @.set("description_error",message)
          false
        else
          true
      remove_description_errors : ->
        @.set("description_error","")
      create_pr : (response, statusText, jqxhr)->
        @.parent.set('planned_results',response)
        @.parent.show_add_planned_result()
        @.onrender() # so edit-in-place is immediately available
      delete_this : ->
        event.stopPropagation()
        id = $(event.target).closest('.description').data('id')
        data = [{name:'id', value:id}, {name:'_method', value: 'delete'}]
        $.ajax
          url : @.get('update_url')
          data : data
          method : 'post'
          dataType : 'json'
          context : @
          success : @.update_pr
      update_pr : (response, statusText, jqxhr)->
        @.parent.set('planned_results',response)

    StrategicPriority = Ractive.extend
      template : '#show_or_new_strategic_priority'
      components :
        pr : PlannedResult
      computed :
        length : ->
          if @.get('description')
            @.get('description').length
          else
            0
        count : ->
          Math.max(0,(100 - @.get('length')))
        spid : ->
          window.strategic_plan.get('id')
        persisted : ->
          !isNaN(parseInt(@.get('id')))
      onrender : ->
        new InpageEdit
          on : "#strategic_priority_editable"+@.get('id')
          object : @
          focus_element : 'input.title'
          success : (response, textStatus, jqXhr)->
            strategic_plan.set('strategic_priorities',response)
            @.show()
          error : ->
            console.log "Changes were not saved, for some reason"
      new_planned_result: ->
        @.push('planned_results', {id : null, description : "", strategic_priority_id : @.get('id')})
      cancel : ->
        @.parent.get('strategic_priorities').shift() # it's only the first one that ever gets cancelled
      form : ->
        $(@.nodes.new_strategic_priority)
      save : ->
        data = @.form().serializeArray()
        url = @.form().attr('action')
        if @.validate(data)
          $.post(url, data, @.update_sp, 'json')
      update_sp : (data,textStatus,jqxhr)->
        strategic_plan.set('strategic_priorities', data)
      delete : ->
        data = {'_method' : 'delete'}
        # TODO if confirm
        $.post(@.get('update_url'), data, @.update_sp, 'json')
      validate : (data) ->
        pl = @._validate(data,'priority_level')
        desc = @._validate(data,'description')
        pl && desc
      _validate : (data, field)->
        message = $('#'+field+'_error').data('message')
        reg = new RegExp(field)
        field_obj = _(data).find (d)->
                      reg.test(d.name)
        if field_obj.value == ""
          @.set(field+"_error",message)
          false
        else
          true
      remove_priority_level_errors : ->
        @.set("priority_level_error","")
      remove_description_errors : ->
        @.set("description_error","")
      _add_planned_result : ->
        $(this.parent.el).
          find('.new_planned_result').
          closest('tr')
      hide_add_planned_result : ->
        @._add_planned_result().
          hide()
      show_add_planned_result : ->
        @._add_planned_result().
          show()
      remove_planned_result_form : ->
        @.pop('planned_results')
        @.show_add_planned_result()

    window.strategic_plan = new Ractive
      el : "#strategic_plan"
      template: "#strategic_plan_template"
      data: strategic_plan_data
      components :
        sp : StrategicPriority
      new_strategic_priority : ->
        # add only if there are no strategic priorities
        # of if the most recent is persisted
        if @.findAllComponents().length == 0 || @.findComponent().get('persisted')
          strategic_plan.unshift('strategic_priorities', {id:null, description: '', priority_level:null} )

