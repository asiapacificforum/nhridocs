.message_block
%h1=t('.heading')

%h4=t('.accreditation.required_files_titles')
= render :partial => 'admin/collection_configuration',
  :locals => { :new_item => @doc_group,
               :create_url => nhri_icc_accreditation_required_document_groups_path,
               :delete_url =>  nhri_icc_accreditation_required_document_group_path('id'),
               :collection => @doc_groups.to_json,
               :item_name => 'doc_group',
               :param_name => 'title',
               :placeholder => 'e.g. Statement of Compliance'}

%h4
  = t('.reference')
  \:
  = t('.filesize_max')
= render :partial => 'admin/document_filesize_configuration',
  :locals => { :update_url => nhri_icc_filesize_path ,
               :param => @icc_reference_document_filesize,
               :context => "icc_reference_document"}

%h4
  = t('.reference')
  \:
  = t('.filetypes')
= render :partial => 'admin/collection_configuration',
  :locals => { :new_item => @icc_reference_doc_filetype,
               :create_url => nhri_icc_filetypes_path,
               :delete_url => nhri_icc_filetype_path('id'),
               :collection => @icc_reference_document_filetypes,
               :item_name => 'icc_reference_document_filetype',
               :param_name => 'ext',
               :placeholder => 'e.g. ppt'}

%h4
  = t('.terms')
  \:
  = t('.filesize_max')
= render :partial => 'admin/document_filesize_configuration',
         :locals => { :update_url => nhri_advisory_council_terms_of_reference_version_filesize_path ,
                      :param => @terms_of_reference_version_filesize,
                      :context => "terms_of_reference_version_filesize"}

%h4
  = t('.terms')
  \:
  = t('.filetypes')
= render :partial => 'admin/collection_configuration',
  :locals => { :new_item => @terms_of_reference_doc_filetype,
               :create_url => nhri_advisory_council_terms_of_reference_version_filetypes_path,
               :delete_url => nhri_advisory_council_terms_of_reference_version_filetype_path('id'),
               :collection => @terms_of_reference_version_filetypes,
               :item_name => 'terms_of_reference_version_filetype',
               :param_name => 'ext',
               :placeholder => 'e.g. ppt'}

%h4
  = t('.minutes')
  \:
  = t('.filesize_max')
= render :partial => 'admin/document_filesize_configuration',
         :locals => { :update_url => nhri_advisory_council_advisory_council_minutes_filesize_path ,
                      :param => @advisory_council_minutes_filesize,
                      :context => "advisory_council_minutes_filesize"}

%h4
  = t('.minutes')
  \:
  = t('.filetypes')
= render :partial => 'admin/collection_configuration',
  :locals => { :new_item => @advisory_council_minutes_filetype,
               :create_url => nhri_advisory_council_advisory_council_minutes_filetypes_path,
               :delete_url => nhri_advisory_council_advisory_council_minutes_filetype_path('id'),
               :collection => @advisory_council_minutes_filetypes,
               :item_name => 'advisory_council_minutes_filetype',
               :param_name => 'ext',
               :placeholder => 'e.g. ppt'}

%h4
  = t('.issues')
  \:
  = t('.filesize_max')
= render :partial => 'admin/document_filesize_configuration',
         :locals => { :update_url => nhri_advisory_council_advisory_council_issue_filesize_path ,
                      :param => @advisory_council_issues_filesize,
                      :context => "advisory_council_issues_filesize"}

%h4
  = t('.issues')
  \:
  = t('.filetypes')
= render :partial => 'admin/collection_configuration',
  :locals => { :new_item => @advisory_council_issues_filetype,
               :create_url => nhri_advisory_council_advisory_council_issue_filetypes_path,
               :delete_url => nhri_advisory_council_advisory_council_issue_filetype_path('id'),
               :collection => @advisory_council_issues_filetypes,
               :item_name => 'advisory_council_issues_filetype',
               :param_name => 'ext',
               :placeholder => 'e.g. ppt'}

:coffeescript
  $ ->
    _.templateSettings = { interpolate: /\{\{(.+?)\}\}/g }
    window.flash_error_template = _.template("<ul class='error'><li>{{message}}</li></ul>")
